# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import loan_pb2 as loan__pb2


class LoanStub(object):
    """The Loan service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.save_loan = channel.unary_unary(
                '/Loan/save_loan',
                request_serializer=loan__pb2.loan_data.SerializeToString,
                response_deserializer=loan__pb2.empty.FromString,
                )
        self.show_installment = channel.unary_unary(
                '/Loan/show_installment',
                request_serializer=loan__pb2.installement_data.SerializeToString,
                response_deserializer=loan__pb2.installement_response.FromString,
                )
        self.repayment = channel.unary_unary(
                '/Loan/repayment',
                request_serializer=loan__pb2.repayment_data.SerializeToString,
                response_deserializer=loan__pb2.empty.FromString,
                )


class LoanServicer(object):
    """The Loan service definition.
    """

    def save_loan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def show_installment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def repayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LoanServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'save_loan': grpc.unary_unary_rpc_method_handler(
                    servicer.save_loan,
                    request_deserializer=loan__pb2.loan_data.FromString,
                    response_serializer=loan__pb2.empty.SerializeToString,
            ),
            'show_installment': grpc.unary_unary_rpc_method_handler(
                    servicer.show_installment,
                    request_deserializer=loan__pb2.installement_data.FromString,
                    response_serializer=loan__pb2.installement_response.SerializeToString,
            ),
            'repayment': grpc.unary_unary_rpc_method_handler(
                    servicer.repayment,
                    request_deserializer=loan__pb2.repayment_data.FromString,
                    response_serializer=loan__pb2.empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Loan', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Loan(object):
    """The Loan service definition.
    """

    @staticmethod
    def save_loan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Loan/save_loan',
            loan__pb2.loan_data.SerializeToString,
            loan__pb2.empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def show_installment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Loan/show_installment',
            loan__pb2.installement_data.SerializeToString,
            loan__pb2.installement_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def repayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Loan/repayment',
            loan__pb2.repayment_data.SerializeToString,
            loan__pb2.empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
